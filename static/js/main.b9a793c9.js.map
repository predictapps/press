{"version":3,"file":"static/js/main.b9a793c9.js","mappings":"kJAIaA,GAAQC,EAAAA,EAAAA,aAAY,CAC/BC,OAAQ,CACNC,QAAS,CACP,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,YAGTC,WAAY,CACVC,KAAM,CACJC,aAAc,CACZC,GAAIC,EAAAA,aAgBZ,QAJ6D,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SAC9D,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,mBAAkB,CAACZ,MAAOA,EAAMU,SAAEA,GAC5C,E,4CCaA,QA3CoD,CAClDG,SAAU,CAACC,EAAQC,UAAU,KAAMD,EAAQC,UAAU,WACrDC,OAAQ,CACNC,QAAS,CACPC,UAAW,CACTC,KAAM,IAERC,GAAI,CACFD,KAAM,OAERE,GAAI,CACFF,KAAM,mBAERG,GAAI,CACFH,KAAM,mBAERI,GAAI,CACFJ,KAAM,uBAERK,GAAI,CACFL,KAAM,6BAERM,WAAY,CACVN,KAAM,qBAERO,KAAM,CACJP,KAAM,QAERQ,UAAW,CACTV,QAAS,CACPW,MAAO,CACLT,KAAM,SAERU,MAAO,CACLV,KAAM,WAIZW,SAAU,O,qICpBhB,QAbc,SAAHrB,GAAA,IAAMsB,EAAMtB,EAANsB,OAAQC,EAAKvB,EAALuB,MAAKC,EAAAxB,EAAEyB,SAAAA,OAAQ,IAAAD,EAAG,GAAEA,EAAEE,EAAO1B,EAAP0B,QAAO,OACpDC,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAACC,GAAG,IAAG5B,SAAA,EACZ0B,EAAAA,EAAAA,MAACG,EAAAA,QAAM,CAACC,KAAM,EAAE9B,SAAA,EACd0B,EAAAA,EAAAA,MAACK,EAAAA,QAAO,CAACC,KAAK,KAAKC,WAAY,IAAIjC,SAAA,CAChCqB,IAAUpB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACD,WAAW,MAAKjC,SAAEqB,IAClCC,MAEHrB,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACC,MAAM,WAAUnC,SAAEwB,QAE1BvB,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CAACC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,gBAAkBb,QAASA,MACjD,ECSX,QAfgB,SAAH1B,GAAA,IAAMwC,EAAOxC,EAAPwC,QAASC,EAAQzC,EAARyC,SAAUf,EAAO1B,EAAP0B,QAAO,OAC3CxB,EAAAA,EAAAA,KAACwC,EAAO,OAAPA,MAAY,CAACC,YAAU,EAACZ,KAAM,EAAE9B,SAC9BuC,EAAQI,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAAK,OAC1B7C,EAAAA,EAAAA,KAACwC,EAAAA,OAAM,CAELM,SAAU,EACVC,QAASF,IAAUN,EAAW,QAAU,UACxCf,QAAS,kBAAMA,EAAQqB,EAAM,EAAC9C,SAE7B6C,GALIC,EAME,KAEE,E,cCpBjB,QAJW,WAAH,OACN7C,EAAAA,EAAAA,KAACgD,EAAAA,KAAI,CAACC,kBAAkB,WAAWC,kBAAmB,GAAKC,EAAE,QAAS,ECCxE,QAFU,SAAHrD,GAAA,IAAMC,EAAQD,EAARC,SAAQ,OAAmBC,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACN,GAAI,EAAE5B,SAAEA,GAAgB,ECoKtE,QAnJkB,SAAHD,GAA2D,IAArDsD,EAAUtD,EAAVsD,WACnBC,GAAoBC,EAAAA,EAAAA,iBAAgB,KAAM,GAAEC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCI,EAAEF,EAAA,GAAEG,EAAKH,EAAA,GAChBI,GAAoBL,EAAAA,EAAAA,iBAAgB,KAAM,GAAEM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAChBG,GAAoBT,EAAAA,EAAAA,iBAAgB,KAAM,GAAEU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAArCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAChBG,GAAoBb,EAAAA,EAAAA,iBAAgB,KAAM,GAAEc,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GAArCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAChBG,GAAoBjB,EAAAA,EAAAA,iBAAgB,KAAM,GAAEkB,GAAAhB,EAAAA,EAAAA,SAAAe,EAAA,GAArCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAEhBG,GAAwCrB,EAAAA,EAAAA,iBAAgB,SAAS,GAAKsB,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAA/DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAEpC,OACEnD,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACEC,EAAAA,EAAAA,KAACgF,EAAAA,MAAK,CAACC,OAAQJ,EAAcK,QAAS,kBAAMJ,GAAgB,EAAM,EAAC/E,UACjE0B,EAAAA,EAAAA,MAACuD,EAAM,MAANA,QAAa,CAAAjF,SAAA,EACZC,EAAAA,EAAAA,KAACgF,EAAM,MAANA,OAAY,CAAAjF,SAAC,wBACd0B,EAAAA,EAAAA,MAACuD,EAAM,MAANA,KAAU,CAAAjF,SAAA,EACTC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,iTAOHC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,4MAMHC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,qGAKLC,EAAAA,EAAAA,KAACgF,EAAM,MAANA,OAAY,CAAAjF,UACXC,EAAAA,EAAAA,KAACwC,EAAAA,OAAM,CACL4C,UAAUpF,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,UACrBb,QAAS,kBAAMsD,GAAgB,EAAM,EAAC/E,SACvC,sCAOP0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACC,GAAG,OAAOC,WAAY,SAASzF,SAAA,EAClEC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACI,MAAM,QAAQL,KAAM,EAAG4D,UAAU,SAAQ1F,SAAC,eAInDC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,cAAcH,MAAM,QAAQH,KAAK,OAClDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAa,CAAEC,OAAQ,SAAU,QAGxE3F,EAAAA,EAAAA,KAAC4F,EAAAA,WAAU,CAACC,GAAG,IAAIC,GAAG,IAAG/F,UACvB0B,EAAAA,EAAAA,MAACsE,EAAAA,QAAG,CAACC,gBAAc,EAAAjG,SAAA,EACjBC,EAAAA,EAAAA,KAACiG,EAAK,CACJ7E,OAAO,GACPC,MAAM,MACNG,QAAS,kBAAM4B,EAAWsC,SAAS,KAAK,KAE1C1F,EAAAA,EAAAA,KAACkG,EAAO,CACN5D,QAAS,CACP,CAAEM,MAAO,WAAOC,MAAO,GACvB,CAAED,MAAO,WAAOC,MAAO,IAEzBN,SAAUkB,EACVjC,QAASkC,KAEX1D,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAACiG,EAAK,CACJ7E,OAAO,GACPC,MAAM,kBACNE,SAAS,wCACTC,QAAS,kBAAM4B,EAAWsC,SAAS,KAAK,KAE1C1F,EAAAA,EAAAA,KAACkG,EAAO,CACN5D,QAAS,CACP,CAAEM,MAAO,UAAMC,MAAO,GACtB,CAAED,MAAO,UAAWC,MAAO,GAC3B,CAAED,MAAO,WAAOC,MAAO,IAEzBN,SAAUsB,EACVrC,QAASsC,KAEX9D,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAACiG,EAAK,CACJ5E,MAAM,kBACNE,SAAS,8BACTC,QAAS,kBAAM4B,EAAWsC,SAAS,KAAK,KAE1C1F,EAAAA,EAAAA,KAACkG,EAAO,CACN5D,QAAS,CACP,CAAEM,MAAO,KAAMC,MAAO,GACtB,CAAED,MAAO,MAAOC,MAAO,IAEzBN,SAAU0B,EACVzC,QAAS0C,KAEXlE,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAACiG,EAAK,CACJ5E,MAAM,qBACNE,SAAS,cACTC,QAAS,kBAAM4B,EAAWsC,SAAS,KAAK,KAE1C1F,EAAAA,EAAAA,KAACkG,EAAO,CACN5D,QAAS,CACP,CAAEM,MAAO,SAAUC,MAAO,GAC1B,CAAED,MAAO,SAAUC,MAAO,GAC1B,CAAED,MAAO,IAAKC,MAAO,IAEvBN,SAAU8B,EACV7C,QAAS8C,KAEXtE,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAACiG,EAAK,CACJ5E,MAAM,4BACNE,SAAS,6CACTC,QAAS,kBAAM4B,EAAWsC,SAAS,KAAK,KAE1C1F,EAAAA,EAAAA,KAACkG,EAAO,CACN5D,QAAS,CACP,CAAEM,MAAO,UAAMC,MAAO,GACtB,CAAED,MAAO,SAAUC,MAAO,GAC1B,CAAED,MAAO,IAAKC,MAAO,IAEvBN,SAAUkC,EACVjD,QAASkD,KAEX1E,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAACwC,EAAAA,OAAM,CACL4D,GAAG,IACHrE,KAAK,KACLqD,UAAUpF,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,eACrBb,QAAS,WACP4B,EAAWsC,SAAS,aAAc,CAChCW,MAAO5C,EAAKI,EAAKI,EAAKI,EAAKI,GAE/B,EAAE1E,SACH,qBAOX,EC1JA,QAPuB,SAAHD,GAAgBA,EAAVsD,WAAU,OAClC3B,EAAAA,EAAAA,MAACuB,EAAAA,KAAI,CAAAjD,SAAA,EACHC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAAA/B,SAAC,SACTC,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAAAlC,SAAC,gDACD,ECyBT,QAnBW,SAAHD,GAAA,IAAMsD,EAAUtD,EAAVsD,WAAU,OACtB3B,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACgB,GAAG,OAAOd,WAAW,SAAQzF,SAAA,EAChEC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAY,KAEjD1F,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACD,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAOnC,SAAC,YAIrDC,EAAAA,EAAAA,KAAC4F,EAAAA,WAAU,CAAA7F,UACTC,EAAAA,EAAAA,KAACgD,EAAAA,KAAI,CAAC6C,GAAI,EAAGlE,GAAG,IAAG5B,UACjBC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,iDAGN,E,aCiBL,QAhCW,SAAHD,GAAA,IAAMsD,EAAUtD,EAAVsD,WAAU,OACtB3B,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACgB,GAAG,OAAOd,WAAW,SAAQzF,SAAA,EAChEC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAY,KAEjD1F,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACD,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAOnC,SAAC,wBAIrD0B,EAAAA,EAAAA,MAACmE,EAAAA,WAAU,CAAA7F,SAAA,EACTC,EAAAA,EAAAA,KAACgD,EAAAA,KAAI,CAAC6C,GAAI,EAAGlE,GAAG,IAAG5B,UACjB0B,EAAAA,EAAAA,MAAC0D,EAAC,CAAApF,SAAA,CAAC,yCACoCC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,6BAA6B,IAAI,sBAI7EC,EAAAA,EAAAA,KAACwG,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBC,WAAW,UACXC,IAAI,mBACJC,MAAO,CACLC,MAAO,OACPC,YAAQC,EACRC,YAAa,IAAM,YAIxB,ECtCL,QAJU,SAAHnH,GAAA,IAAMC,EAAQD,EAARC,SAAQ,OACnBC,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACD,WAAW,OAAMjC,SAAEA,GAAgB,ECkD3C,QArCW,SAAHD,GAAA,IAAMsD,EAAUtD,EAAVsD,WAAU,OACtB3B,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACgB,GAAG,OAAOd,WAAW,SAAQzF,SAAA,EAChEC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAY,KAEjD1F,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACD,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAOnC,SAAC,wBAIrD0B,EAAAA,EAAAA,MAACmE,EAAAA,WAAU,CAAA7F,SAAA,EACT0B,EAAAA,EAAAA,MAACuB,EAAAA,KAAI,CAAC6C,GAAI,EAAGlE,GAAG,IAAG5B,SAAA,EACjB0B,EAAAA,EAAAA,MAAC0D,EAAC,CAAApF,SAAA,CAAC,iDAC4CC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,sBAAqB,gHAIvE0B,EAAAA,EAAAA,MAAC0D,EAAC,CAAApF,SAAA,EACAC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,mFAIlBC,EAAAA,EAAAA,KAACwG,EAAAA,QAAK,CACJC,OAAQC,EAAQ,KAChBC,WAAW,UACXC,IAAI,mBACJC,MAAO,CACLC,MAAO,OACPC,YAAQC,EACRC,YAAa,KAAO,YAIzB,ECvCL,QATW,SAAHnH,GAAA,IAAMC,EAAQD,EAARC,SAAQ,OACpB0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC6D,GAAG,IAAGxF,SAAA,EACZC,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAAAlC,UACHC,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACiF,SAAS,OAAMnH,SAAC,cAExBC,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACsD,GAAI,EAAExF,SAAEA,MACP,EC0EX,QAlEW,SAAHD,GAAA,IAAMsD,EAAUtD,EAAVsD,WAAU,OACtB3B,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACgB,GAAG,OAAOd,WAAW,SAAQzF,SAAA,EAChEC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAY,KAEjD1F,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACD,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAOnC,SAAC,2BAIrDC,EAAAA,EAAAA,KAAC4F,EAAAA,WAAU,CAAA7F,UACT0B,EAAAA,EAAAA,MAACuB,EAAAA,KAAI,CAAC6C,GAAI,EAAGlE,GAAG,IAAG5B,SAAA,EACjB0B,EAAAA,EAAAA,MAAC0D,EAAC,CAAApF,SAAA,CAAC,kFAGDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,gBAAe,4EAGpBC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,UACAC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,mBAEL0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,cAAa,mFAGlB0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,eAAc,6JAInB0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,wBAAuB,wKAI5B0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,8BAA6B,2FAGlC0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,wBAAuB,gIAI5B0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,+BAA8B,uFAGnCC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,wIAIHC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAI,EAAE5B,SAAC,eAG1BC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,qLAON,ECHL,QA5DW,SAAHD,GAAA,IAAMsD,EAAUtD,EAAVsD,WAAU,OACtB3B,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACgB,GAAG,OAAOd,WAAW,SAAQzF,SAAA,EAChEC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAY,KAEjD1F,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACD,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAOnC,SAAC,kCAIrDC,EAAAA,EAAAA,KAAC4F,EAAAA,WAAU,CAAA7F,UACT0B,EAAAA,EAAAA,MAACuB,EAAAA,KAAI,CAAC6C,GAAI,EAAGlE,GAAG,IAAG5B,SAAA,EACjB0B,EAAAA,EAAAA,MAAC0D,EAAC,CAAApF,SAAA,CAAC,0DAEDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,wCAAuC,oJAI5CC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,UACAC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,2CAGL0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,yBAEhB0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,+DAEhB0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,qEAGhB0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,gDAEhB0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,wGAGhB0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,oHAGhB0B,EAAAA,EAAAA,MAAC0F,EAAE,CAAApH,SAAA,EACDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,6CAEhBC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAI,EAAE5B,SAAC,eAG1BC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,uMAON,E,cCYL,QA7Ec,SAAHD,GAAA,IAAMsD,EAAUtD,EAAVsD,WAAU,OACzB3B,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACgB,GAAG,OAAOd,WAAW,SAAQzF,SAAA,EAChEC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAY,KAEjD1F,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACD,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAOnC,SAAC,cAIrDC,EAAAA,EAAAA,KAAC4F,EAAAA,WAAU,CAACC,GAAG,IAAG9F,UAChB0B,EAAAA,EAAAA,MAACsE,EAAAA,QAAG,CAACC,gBAAc,EAAAjG,SAAA,EACjBC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,iBAG1BC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,yCACHC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,qCACJC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,8GAIJC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,8CACHC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,+BACJC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,0DACJC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,2DACJC,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,iBAG1BC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,yIAIJC,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,gBAG1BC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,0KAKJC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,gPAMJC,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,iBAG1BC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,sHAIJC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,2NAMJC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,+FAIJC,EAAAA,EAAAA,KAACmG,EAAE,KACHnG,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,2BAG1BC,EAAAA,EAAAA,KAACmH,EAAE,CAAApH,SAAC,0DAGP,E,wBCtBL,QA5Cc,SAAHD,GAAA,IAAAsH,EAAMhE,EAAUtD,EAAVsD,WAAU,OACzB3B,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACE,WAAW,SAASc,GAAG,OAAMvG,SAAA,EAChEC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAY,KAEjD1F,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACD,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAQmF,aAAW,EAAAtH,SAAC,2BAIjE0B,EAAAA,EAAAA,MAACmE,EAAAA,WAAU,CAAC0B,EAAE,IAAGvH,SAAA,EACf0B,EAAAA,EAAAA,MAACG,EAAAA,QAAM,CAACoE,gBAAc,EAAAjG,SAAA,EACpBC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,QACd/B,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,iTAOHC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,4MAKHC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,qGAKLC,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACwD,UAAU,SAASvD,MAAM,WAAUnC,SAClB,OADkBqH,EACtCG,EAAAA,QAAAA,iBAAoB,EAApBH,EAAsBI,WAEzBxH,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACwD,UAAU,SAASvD,MAAM,WAAUnC,SACtC0H,EAAYC,sBAEf1H,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACwD,UAAU,SAASvD,MAAM,WAAUnC,SACtC0H,EAAYE,gCAGhB,ECjDL,IAAM3G,GAAY4G,EAAAA,EAAAA,WAiClB,QA/B2B,WACzB,OACEnG,EAAAA,EAAAA,MAACT,EAAU6G,UAAS,CAClBC,cAAe,CACbC,oBAAqB,aACrBC,aAAa,EACbC,iBAAkB,CAAEjG,WAAY,QAChCjC,SAAA,EAEFC,EAAAA,EAAAA,KAACgB,EAAUkH,OAAM,CACf7F,KAAK,QACL8F,UAAWlH,EACXqB,QAAS,CACP8F,WAAY,SAAAtI,GAAA,IAAGoC,EAAKpC,EAALoC,MAAK,OAClBlC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,sBAAsBH,MAAOA,EAAOH,KAAK,MAAO,MAIjE/B,EAAAA,EAAAA,KAACgB,EAAUkH,OAAM,CACf7F,KAAK,QACL8F,UAAWjH,EACXoB,QAAS,CACP8F,WAAY,SAAAzF,GAAA,IAAGT,EAAKS,EAALT,MAAK,OAClBlC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,wBAAwBH,MAAOA,EAAOH,KAAK,MAAO,OAMzE,ECvCA,IAAMsG,EACO,CACTC,KAAM,CACJzF,MAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9C0F,IAAK,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3CC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEhDC,MAAO,CACL5F,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5C0F,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IACxCC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAV9CH,EAaM,CACRC,KAAM,CACJzF,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KACpD0F,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7CC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,MAErDC,MAAO,CACL5F,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAChD0F,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7CC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,M,eCapD,SA1ByC,SAAH1I,GAAA,IAAMyI,EAAGzI,EAAHyI,IAAKC,EAAG1I,EAAH0I,IAAK3F,EAAK/C,EAAL+C,MAAK,OACzD7C,EAAAA,EAAAA,KAAC0I,GAAAA,yBAAwB,CACvB3G,KAAM,IACN+E,MAAO,GACP6B,KAAM9F,EACN+F,SAAU,EACVC,UAAU,UACVC,QAAQ,QACRC,gBAAgB,UAAShJ,SAExB,SAAC4I,GAAI,OACJlH,EAAAA,EAAAA,MAACG,EAAAA,QAAM,CAAC4D,WAAW,SAAQzF,SAAA,EACzB0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC8D,WAAW,WAAUzF,SAAA,EAC3BC,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAACD,WAAW,OAAOkF,SAAU,GAAGnH,SAClC4I,EAAKK,aAERhJ,EAAAA,EAAAA,KAACiC,EAAAA,QAAI,CAAAlC,SAAC,UAER0B,EAAAA,EAAAA,MAACQ,EAAAA,QAAI,CAACC,MAAM,WAAUnC,SAAA,CACnBwI,EAAI,OAAKC,EAAI,SAET,GAEc,E,+kBC+C7B,SAhEmB,SAAH1I,GAG2B,IAFzCsD,EAAUtD,EAAVsD,WAGQiD,EAFHvG,EAALmJ,MAEwBC,OAAhB7C,MACR8C,EFOF,SAAgB9C,GACd,IAAQ+C,EAAwBf,EAAbgB,EAAahB,EAChC,MAAO,CACLiB,cAAe,CACbf,IAAKa,EAAUd,KAAKC,IAAIlC,GACxBmC,IAAKY,EAAUd,KAAKE,IAAInC,GACxBxD,MAAOuG,EAAUd,KAAKzF,MAAMwD,IAE9BkD,eAAgB,CACdhB,IAAKa,EAAUX,MAAMF,IAAIlC,GACzBmC,IAAKY,EAAUX,MAAMD,IAAInC,GACzBxD,MAAOuG,EAAUX,MAAM5F,MAAMwD,IAE/BmD,aAAc,CACZjB,IAAKc,EAASf,KAAKC,IAAIlC,GACvBmC,IAAKa,EAASf,KAAKE,IAAInC,GACvBxD,MAAOwG,EAASf,KAAKzF,MAAMwD,IAE7BoD,cAAe,CACblB,IAAKc,EAASZ,MAAMF,IAAIlC,GACxBmC,IAAKa,EAASZ,MAAMD,IAAInC,GACxBxD,MAAOwG,EAASZ,MAAM5F,MAAMwD,IAGjC,CE9BGqD,CAASrD,GADHkD,EAAcJ,EAAdI,eAAgBD,EAAaH,EAAbG,cAAeG,EAAaN,EAAbM,cAAeD,EAAYL,EAAZK,aAEtD,OACE/H,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC4D,aAAW,EAACD,GAAG,cAAatF,SAAA,EAClCC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,kBAAM4B,EAAWsC,SAAS,YAAY,KAEjDjE,EAAAA,EAAAA,MAACK,EAAAA,QAAO,CAAC6H,UAAU,SAAS9H,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAOnC,SAAA,CAAC,SAC7DsG,EAAM,cAEfrG,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,cAAcH,MAAM,QAAQH,KAAK,OAClDP,QAAS,kBAAM4B,EAAWsC,SAAS,OAAO,QAG9C1F,EAAAA,EAAAA,KAAC+F,EAAAA,QAAG,CAACC,gBAAc,EAAAjG,UACjB0B,EAAAA,EAAAA,MAACmE,EAAAA,WAAU,CAACC,GAAG,IAAG9F,SAAA,EAChBC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAK6H,GAAG,IAAG7J,SAAC,yCAG1B0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAACmI,eAAe,eAAc9J,SAAA,EACnC0B,EAAAA,EAAAA,MAACG,EAAAA,QAAM,CAAC4D,WAAW,SAAQzF,SAAA,EACzBC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,WAG1BC,EAAAA,EAAAA,KAAC8J,GAAUC,GAAA,GAAKT,QAElB7H,EAAAA,EAAAA,MAACG,EAAAA,QAAM,CAAC4D,WAAW,SAAQzF,SAAA,EACzBC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,YAG1BC,EAAAA,EAAAA,KAAC8J,GAAUC,GAAA,GAAKR,WAGpBvJ,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAK6H,GAAG,IAAG7J,SAAC,iCAG1B0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAACmI,eAAe,eAAc9J,SAAA,EACnC0B,EAAAA,EAAAA,MAACG,EAAAA,QAAM,CAAC4D,WAAW,SAAQzF,SAAA,EACzBC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,WAG1BC,EAAAA,EAAAA,KAAC8J,GAAUC,GAAA,GAAKP,QAElB/H,EAAAA,EAAAA,MAACG,EAAAA,QAAM,CAAC4D,WAAW,SAAQzF,SAAA,EACzBC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAG,IAAG5B,SAAC,YAG1BC,EAAAA,EAAAA,KAAC8J,GAAUC,GAAA,GAAKN,iBAO9B,ECIA,SA1Ea,SAAH3J,GAAA,IAAMsD,EAAUtD,EAAVsD,WAAU,OACxB3B,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAAhF,SAAA,EACE0B,EAAAA,EAAAA,MAACC,EAAAA,QAAM,CAAC2D,GAAG,cAAcC,aAAW,EAACgB,GAAG,OAAOd,WAAW,SAAQzF,SAAA,EAChEC,EAAAA,EAAAA,KAACmC,EAAAA,QAAU,CACTC,MAAMpC,EAAAA,EAAAA,KAACN,EAAAA,QAAI,CAAC2C,KAAK,aAAaH,MAAM,QAAQH,KAAK,OACjDP,QAAS,WACH4B,EAAW4G,YACb5G,EAAW6G,SAEX7G,EAAWsC,SAAS,YAExB,KAEF1F,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACD,KAAM,EAAG4D,UAAU,SAASvD,MAAM,QAAOnC,SAAC,yBAKrDC,EAAAA,EAAAA,KAAC4F,EAAAA,WAAU,CAACC,GAAI,EAAGlE,GAAG,IAAG5B,UACvB0B,EAAAA,EAAAA,MAACsE,EAAAA,QAAG,CAACC,gBAAc,EAAAjG,SAAA,EACjBC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,6UAOHC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAI,EAAE5B,SAAC,0BAG1B0B,EAAAA,EAAAA,MAAC0D,EAAC,CAAApF,SAAA,CAAC,4FAGDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,WAAU,QAEf0B,EAAAA,EAAAA,MAAC0D,EAAC,CAAApF,SAAA,CAAC,0FAGDC,EAAAA,EAAAA,KAACuG,EAAC,CAAAxG,SAAC,YAAW,QAEhBC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,4GAIHC,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,KAAK,KAAKJ,GAAI,EAAE5B,SAAC,eAG1BC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,4WAQHC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,8LAKHC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,4HAIHC,EAAAA,EAAAA,KAACmF,EAAC,CAAApF,SAAC,qKAON,EC/DL,IAAMmK,IAAQC,EAAAA,EAAAA,WAmCd,SAjCsB,WAAH,OACjBnK,EAAAA,EAAAA,KAACkK,GAAMrC,UAAS,CAAA9H,UACd0B,EAAAA,EAAAA,MAACyI,GAAME,MAAK,CAACtC,cAAe,CAAEE,aAAa,GAAQjI,SAAA,EACjDC,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CAAC7F,KAAK,YAAY8F,UAAW5H,KAC1CP,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CAAC7F,KAAK,KAAK8F,UAAW1H,EAAI6B,QAAS,CAAEjB,MAAO,UACzDrB,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CACX7F,KAAK,KACL8F,UAAWzH,EACX4B,QAAS,CAAEjB,MAAO,sBAEpBrB,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CACX7F,KAAK,KACL8F,UAAWxH,EACX2B,QAAS,CAAEjB,MAAO,sBAEpBrB,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CACX7F,KAAK,KACL8F,UAAWvH,EACX0B,QAAS,CAAEjB,MAAO,yBAEpBrB,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CACX7F,KAAK,KACL8F,UAAWtH,EACXyB,QAAS,CAAEjB,MAAO,gCAEpBrB,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CAAC7F,KAAK,aAAa8F,UAAWrH,MAC3Cd,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CAAC7F,KAAK,OAAO8F,UAAWpH,MACrCf,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CAAC7F,KAAK,YAAY8F,UAAWkC,KAC1CrK,EAAAA,EAAAA,KAACkK,GAAMhC,OAAM,CAAC7F,KAAK,WAAW8F,UAAWhH,QAE3B,E,8lBCvCpB,IAAMmJ,GAAOP,GAAAA,GAAA,GACRQ,EAAAA,SAAY,IACfhL,OAAMwK,GAAAA,GAAA,GACDQ,EAAAA,QAAAA,QAAmB,IACtB/K,QAASH,EAAME,OAAOC,QAAQ,SAalC,SATmB,WAAH,OACdQ,EAAAA,EAAAA,KAACwK,EAAAA,QAAmB,CAClBC,QAAyB,QAAhBC,GAAAA,QAAAA,QAAwB1D,EAAY2D,EAC7CtL,MAAOiL,GAAQvK,UAEfC,EAAAA,EAAAA,KAAC4K,GAAa,KACM,ECTxB,SAV0D,SAAH9K,GAAsB,IAAhBC,EAAQD,EAARC,SAC3D8K,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAvH,EAAAA,EAAAA,SAAAqH,EAAA,GAArCG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAM1B,OALAG,EAAAA,EAAAA,YAAU,WACRC,EAAAA,YAAAA,OAAmBC,MAAK,WACtBH,GAAW,EACb,GACF,GAAG,KACIjL,EAAAA,EAAAA,KAAA+E,EAAAA,SAAA,CAAAhF,SAAGiL,EAAU,KAAOjL,GAC7B,E,eCiCA,SAxCc,SAAHD,GAAqD,IAA/CC,EAAQD,EAARC,SACf,MAAoB,QAAhB2K,GAAAA,QAAAA,IACK1K,EAAAA,EAAAA,KAAA+E,EAAAA,SAAA,CAAAhF,SAAGA,KAIVC,EAAAA,EAAAA,KAACgD,EAAAA,KAAI,CAACqC,GAAG,eAAexD,KAAM,EAAE9B,UAC9BC,EAAAA,EAAAA,KAACqL,GAAAA,QAAe,CACd5E,OAAQC,EAAQ,MAChBG,MAAO,CAAEhF,KAAM,GAAI9B,UAEnBC,EAAAA,EAAAA,KAACgD,EAAAA,KAAI,CACHnB,KAAM,EACNyJ,YAAY,UACZC,SAAS,OACTC,OAAQ,EACRC,EAAE,OACFrF,GAAI,CAAC,EAAG,EAAG,QACXsF,KAAM,CAAC,KAAM,KAAM,KACnBC,KAAM,CAAC,KAAM,KAAM,KACnBC,YAAa,CAAC,KAAM,KAAM,GAC1BC,aAAc,CAAC,EAAG,EAAG,IACrBlC,UAAU,SAAQ5J,UAElBC,EAAAA,EAAAA,KAACgD,EAAAA,KAAI,CACHnB,KAAM,EACNyJ,YAAY,WACZG,EAAE,OACFF,SAAS,OACTK,YAAa,CAAC,KAAM,KAAM,IAC1BC,aAAc,CAAC,EAAG,EAAG,IACrBxG,GAAG,QAAOtF,SAETA,SAMb,ECrBA,SAbY,WAAH,OACPC,EAAAA,EAAAA,KAAC8L,GAAO,CAAA/L,UACNC,EAAAA,EAAAA,KAAC+L,EAAU,CAAAhM,UACTC,EAAAA,EAAAA,KAACgM,EAAAA,iBAAgB,CAAAjM,UACf0B,EAAAA,EAAAA,MAACwK,GAAK,CAAAlM,SAAA,EACJC,EAAAA,EAAAA,KAACkM,GAAU,KACXlM,EAAAA,EAAAA,KAACmM,EAAAA,QAAS,CAACtF,MAAM,kBAIf,C,iSClBRuF,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBtF,IAAjBuF,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjDI,GAAIJ,EACJK,QAAQ,EACRH,QAAS,CAAC,GAUX,OANAI,EAAoBN,GAAUO,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOE,QAAS,EAGTF,EAAOD,OACf,CAGAH,EAAoBS,EAAIF,E,MC5BxB,IAAIG,EAAW,GACfV,EAAoBW,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAASS,OAAQD,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYL,EAASQ,GACpCE,GAAY,EACPC,EAAI,EAAGA,EAAIR,EAASM,OAAQE,MACpB,EAAXN,GAAsBC,GAAgBD,IAAaO,OAAOC,KAAKvB,EAAoBW,GAAGa,OAAOC,GAASzB,EAAoBW,EAAEc,GAAKZ,EAASQ,MAC9IR,EAASa,OAAOL,IAAK,IAErBD,GAAY,EACTL,EAAWC,IAAcA,EAAeD,IAG7C,GAAGK,EAAW,CACbV,EAASgB,OAAOR,IAAK,GACrB,IAAIS,EAAIb,SACEnG,IAANgH,IAAiBf,EAASe,EAC/B,CACD,CACA,OAAOf,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAASS,OAAQD,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,C,KCzBdf,EAAoB4B,EAAKxB,IACxB,IAAIyB,EAASzB,GAAUA,EAAO0B,WAC7B,IAAO1B,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoB+B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,E,MCNd,IACII,EADAC,EAAWZ,OAAOa,eAAkBC,GAASd,OAAOa,eAAeC,GAASA,GAASA,EAAa,UAQtGpC,EAAoBqC,EAAI,SAAS7L,EAAO8L,GAEvC,GADU,EAAPA,IAAU9L,EAAQ+L,KAAK/L,IAChB,EAAP8L,EAAU,OAAO9L,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP8L,GAAa9L,EAAMsL,WAAY,OAAOtL,EAC1C,GAAW,GAAP8L,GAAoC,oBAAf9L,EAAMuI,KAAqB,OAAOvI,CAC5D,CACA,IAAIgM,EAAKlB,OAAOmB,OAAO,MACvBzC,EAAoB2B,EAAEa,GACtB,IAAIE,EAAM,CAAC,EACXT,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIS,EAAiB,EAAPL,GAAY9L,EAAyB,iBAAXmM,KAAyBV,EAAeW,QAAQD,GAAUA,EAAUT,EAASS,GACxHrB,OAAOuB,oBAAoBF,GAASG,SAASrB,GAASiB,EAAIjB,GAAO,IAAOjL,EAAMiL,KAI/E,OAFAiB,EAAa,QAAI,IAAM,EACvB1C,EAAoB+B,EAAES,EAAIE,GACnBF,CACR,C,KCxBAxC,EAAoB+B,EAAI,CAAC5B,EAAS4C,KACjC,IAAI,IAAItB,KAAOsB,EACX/C,EAAoBgD,EAAED,EAAYtB,KAASzB,EAAoBgD,EAAE7C,EAASsB,IAC5EH,OAAO2B,eAAe9C,EAASsB,EAAK,CAAEyB,YAAY,EAAMC,IAAKJ,EAAWtB,IAE1E,ECNDzB,EAAoBoD,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOd,MAAQ,IAAIe,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBxD,EAAoBgD,EAAI,CAACZ,EAAKqB,IAAUnC,OAAOoC,UAAUC,eAAenD,KAAK4B,EAAKqB,GCClFzD,EAAoB2B,EAAKxB,IACH,qBAAXyD,QAA0BA,OAAOC,aAC1CvC,OAAO2B,eAAe9C,EAASyD,OAAOC,YAAa,CAAErN,MAAO,WAE7D8K,OAAO2B,eAAe9C,EAAS,aAAc,CAAE3J,OAAO,GAAO,ECL9DwJ,EAAoB8D,IAAO1D,IAC1BA,EAAO2D,MAAQ,GACV3D,EAAO1M,WAAU0M,EAAO1M,SAAW,IACjC0M,GCHRJ,EAAoB/E,EAAI,U,MCKxB,IAAI+I,EAAkB,CACrB,IAAK,GAaNhE,EAAoBW,EAAEU,EAAK4C,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGInE,EAAUgE,GAHTpD,EAAUwD,EAAaC,GAAWF,EAGhBlD,EAAI,EAC3B,GAAGL,EAAS0D,MAAMlE,GAAgC,IAAxB2D,EAAgB3D,KAAa,CACtD,IAAIJ,KAAYoE,EACZrE,EAAoBgD,EAAEqB,EAAapE,KACrCD,EAAoBS,EAAER,GAAYoE,EAAYpE,IAGhD,GAAGqE,EAAS,IAAI1D,EAAS0D,EAAQtE,EAClC,CAEA,IADGmE,GAA4BA,EAA2BC,GACrDlD,EAAIL,EAASM,OAAQD,IACzB+C,EAAUpD,EAASK,GAChBlB,EAAoBgD,EAAEgB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOjE,EAAoBW,EAAEC,EAAO,EAGjC4D,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmB1B,QAAQoB,EAAqBQ,KAAK,KAAM,IAC3DF,EAAmBG,KAAOT,EAAqBQ,KAAK,KAAMF,EAAmBG,KAAKD,KAAKF,G,KC7CvF,IAAII,EAAsB5E,EAAoBW,OAAEhG,EAAW,CAAC,MAAM,IAAOqF,EAAoB,QAC7F4E,EAAsB5E,EAAoBW,EAAEiE,E","sources":["NativeBase.tsx","navigation/LinkingConfiguration.ts","components/Label.tsx","components/Segment.tsx","components/Hr.tsx","components/P.tsx","screens/Calculate.tsx","screens/NotFound.tsx","screens/P1.tsx","screens/P2.tsx","components/B.tsx","screens/P3.tsx","components/Li.tsx","screens/P4.tsx","screens/P5.tsx","screens/About.tsx","screens/Terms.tsx","navigation/BottomTabNavigator.tsx","services/estimate.ts","components/Gauge.tsx","screens/Prediction.tsx","screens/Info.tsx","navigation/RootNavigator.tsx","navigation/index.tsx","Storage.tsx","components/Phone.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react'\nimport { NativeBaseProvider, extendTheme } from 'native-base'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nexport const theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#F7FBCB',\n      200: '#EEF899',\n      300: '#DAEC65',\n      400: '#C3D93E',\n      500: '#A3C109',\n      600: '#89A506',\n      700: '#708A04',\n      800: '#586F02',\n      900: '#475C01',\n    },\n  },\n  components: {\n    Icon: {\n      defaultProps: {\n        as: MaterialCommunityIcons,\n      },\n    },\n  },\n})\n\ntype CustomThemeType = typeof theme\n\ndeclare module 'native-base' {\n  interface ICustomTheme extends CustomThemeType {}\n}\n\nconst NativeBase: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  return <NativeBaseProvider theme={theme}>{children}</NativeBaseProvider>\n}\n\nexport default NativeBase\n","import { LinkingOptions } from '@react-navigation/native'\nimport * as Linking from 'expo-linking'\n\nimport { RootStackParamList } from './types'\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.createURL('/'), Linking.createURL('/press')],\n  config: {\n    screens: {\n      Calculate: {\n        path: '',\n      },\n      P1: {\n        path: 'age',\n      },\n      P2: {\n        path: 'stroke-severity',\n      },\n      P3: {\n        path: 'stroke-location',\n      },\n      P4: {\n        path: 'risk-of-aspriration',\n      },\n      P5: {\n        path: 'impairment-of-oral-intake',\n      },\n      Prediction: {\n        path: 'prediction/:score',\n      },\n      Info: {\n        path: 'info',\n      },\n      BottomTab: {\n        screens: {\n          About: {\n            path: 'about',\n          },\n          Terms: {\n            path: 'terms',\n          },\n        },\n      },\n      NotFound: '*',\n    },\n  },\n}\n\nexport default linking\n","import React from 'react'\nimport { Heading, HStack, VStack, Text, IconButton, Icon } from 'native-base'\n\ninterface LabelProps {\n  letter?: string\n  title: string\n  subTitle?: string\n  onPress: () => void\n}\n\nconst Label = ({ letter, title, subTitle = '', onPress }: LabelProps) => (\n  <HStack py=\"2\">\n    <VStack flex={1}>\n      <Heading size=\"md\" fontWeight={300}>\n        {letter && <Text fontWeight=\"600\">{letter}</Text>}\n        {title}\n      </Heading>\n      <Text color=\"gray.500\">{subTitle}</Text>\n    </VStack>\n    <IconButton icon={<Icon name=\"information\" />} onPress={onPress} />\n  </HStack>\n)\n\nexport default Label\n","import { loadOptions } from '@babel/core'\nimport { Button } from 'native-base'\nimport React from 'react'\n\ninterface Option {\n  label: string\n  value: number\n}\n\ninterface SegmentProps {\n  options: Option[]\n  selected: number\n  onPress: (value: number) => void\n}\nconst Segment = ({ options, selected, onPress }: SegmentProps) => (\n  <Button.Group isAttached flex={1}>\n    {options.map(({ label, value }) => (\n      <Button\n        key={value}\n        flexGrow={1}\n        variant={value === selected ? 'solid' : 'outline'}\n        onPress={() => onPress(value)}\n      >\n        {label}\n      </Button>\n    ))}\n  </Button.Group>\n)\n\nexport default Segment\n","import { View } from 'native-base'\n\nconst Hr = () => (\n  <View borderBottomColor=\"gray.300\" borderBottomWidth={0.5} h=\"10px\" />\n)\n\nexport default Hr\n","import { ITextProps, Text } from 'native-base'\n\nconst P = ({ children }: ITextProps) => <Text py={1}>{children}</Text>\n\nexport default P\n","import React from 'react'\nimport {\n  Heading,\n  Button,\n  HStack,\n  IconButton,\n  Icon,\n  ScrollView,\n  Box,\n  Modal,\n} from 'native-base'\nimport { useStatePersist } from 'use-state-persist'\n\nimport { RootStackScreenProps } from '../navigation/types'\nimport Label from '../components/Label'\nimport Segment from '../components/Segment'\nimport Hr from '../components/Hr'\nimport P from '../components/P'\n\nconst Calculate = ({ navigation }: RootStackScreenProps<'Calculate'>) => {\n  const [p1, setP1] = useStatePersist('p1', 0)\n  const [p2, setP2] = useStatePersist('p2', 0)\n  const [p3, setP3] = useStatePersist('p3', 0)\n  const [p4, setP4] = useStatePersist('p4', 0)\n  const [p5, setP5] = useStatePersist('p5', 0)\n\n  const [termsVisible, setTermsVisible] = useStatePersist('terms', true)\n\n  return (\n    <>\n      <Modal isOpen={termsVisible} onClose={() => setTermsVisible(false)}>\n        <Modal.Content>\n          <Modal.Header>Terms &amp; Conditions</Modal.Header>\n          <Modal.Body>\n            <P>\n              PRESS (Predictive Swallowing Score) is a prediction tool\n              applicable to people who suffered an ischaemic stroke leading to\n              impaired oral intake. Given some clinical characteristics, it\n              provides estimates of the probability to recover oral intake or\n              return to prestroke diet 7 or 30 days after stroke.\n            </P>\n            <P>\n              This tool is meant to be used only by medical professionals to\n              improve prognostication of dysphagia recovery after stroke. Its\n              clinical usefulness to influence medical decisions has not been\n              tested.\n            </P>\n            <P>\n              By accepting these terms, the user agrees on the nature and\n              purpose of this prediction tool.\n            </P>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              leftIcon={<Icon name=\"check\" />}\n              onPress={() => setTermsVisible(false)}\n            >\n              Accept Terms &amp; Conditions\n            </Button>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n\n      <HStack bg=\"primary.500\" safeAreaTop pl=\"50px\" alignItems={'center'}>\n        <Heading color=\"white\" flex={1} textAlign=\"center\">\n          Calculate\n        </Heading>\n\n        <IconButton\n          icon={<Icon name=\"help-circle\" color=\"white\" size=\"xl\" />}\n          onPress={() => navigation.navigate('BottomTab', { screen: 'About' })}\n        />\n      </HStack>\n      <ScrollView px=\"5\" pb=\"5\">\n        <Box safeAreaBottom>\n          <Label\n            letter=\"\"\n            title=\"Age\"\n            onPress={() => navigation.navigate('P1')}\n          />\n          <Segment\n            options={[\n              { label: '≤70', value: 0 },\n              { label: '≥70', value: 2 },\n            ]}\n            selected={p1}\n            onPress={setP1}\n          />\n          <Hr />\n          <Label\n            letter=\"\"\n            title=\"Stroke severity\"\n            subTitle=\"NIH Stroke Scale (NIHSS) at admission\"\n            onPress={() => navigation.navigate('P2')}\n          />\n          <Segment\n            options={[\n              { label: '≤5', value: 0 },\n              { label: '6 to 13', value: 1 },\n              { label: '≥14', value: 2 },\n            ]}\n            selected={p2}\n            onPress={setP2}\n          />\n          <Hr />\n          <Label\n            title=\"Stroke location\"\n            subTitle=\"Lesion of frontal operculum\"\n            onPress={() => navigation.navigate('P3')}\n          />\n          <Segment\n            options={[\n              { label: 'NO', value: 0 },\n              { label: 'YES', value: 1 },\n            ]}\n            selected={p3}\n            onPress={setP3}\n          />\n          <Hr />\n          <Label\n            title=\"Risk of aspiration\"\n            subTitle=\"Any 2 scale\"\n            onPress={() => navigation.navigate('P4')}\n          />\n          <Segment\n            options={[\n              { label: '0 to 3', value: 0 },\n              { label: '4 to 5', value: 1 },\n              { label: '6', value: 2 },\n            ]}\n            selected={p4}\n            onPress={setP4}\n          />\n          <Hr />\n          <Label\n            title=\"Impairment of oral intake\"\n            subTitle=\"Initial Functional Oral Intake Scale(FOIS)\"\n            onPress={() => navigation.navigate('P5')}\n          />\n          <Segment\n            options={[\n              { label: '≥4', value: 0 },\n              { label: '2 to 3', value: 2 },\n              { label: '1', value: 4 },\n            ]}\n            selected={p5}\n            onPress={setP5}\n          />\n          <Hr />\n          <Button\n            mt=\"5\"\n            size=\"lg\"\n            leftIcon={<Icon name=\"calculator\" />}\n            onPress={() => {\n              navigation.navigate('Prediction', {\n                score: p1 + p2 + p3 + p4 + p5,\n              })\n            }}\n          >\n            Calculate\n          </Button>\n        </Box>\n      </ScrollView>\n    </>\n  )\n}\nexport default Calculate\n","import { Heading, Text, View } from 'native-base'\n\nimport { RootStackScreenProps } from '../navigation/types'\n\nconst NotFoundScreen = ({ navigation }: RootStackScreenProps<'NotFound'>) => (\n  <View>\n    <Heading>404</Heading>\n    <Text>Page you are looking for does not exists.</Text>\n  </View>\n)\n\nexport default NotFoundScreen\n","import React from 'react'\nimport {\n  Heading,\n  HStack,\n  Icon,\n  IconButton,\n  ScrollView,\n  View,\n} from 'native-base'\n\nimport P from '../components/P'\n\nimport { RootStackScreenProps } from '../navigation/types'\n\nconst P1 = ({ navigation }: RootStackScreenProps<'P1'>) => (\n  <>\n    <HStack bg=\"primary.500\" safeAreaTop pr=\"50px\" alignItems=\"center\">\n      <IconButton\n        icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n        onPress={() => navigation.navigate('Calculate')}\n      />\n      <Heading flex={1} textAlign=\"center\" color=\"white\">\n        Age\n      </Heading>\n    </HStack>\n    <ScrollView>\n      <View px={5} py=\"3\">\n        <P>Age at stroke onset is given in years.</P>\n      </View>\n    </ScrollView>\n  </>\n)\n\nexport default P1\n","import React from 'react'\nimport {\n  Image,\n  Heading,\n  HStack,\n  Icon,\n  IconButton,\n  ScrollView,\n  View,\n} from 'native-base'\n\nimport { RootStackScreenProps } from '../navigation/types'\nimport P from '../components/P'\nimport B from '../components/P'\n\nconst P2 = ({ navigation }: RootStackScreenProps<'P1'>) => (\n  <>\n    <HStack bg=\"primary.500\" safeAreaTop pr=\"50px\" alignItems=\"center\">\n      <IconButton\n        icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n        onPress={() => navigation.navigate('Calculate')}\n      />\n      <Heading flex={1} textAlign=\"center\" color=\"white\">\n        Stroke severity\n      </Heading>\n    </HStack>\n    <ScrollView>\n      <View px={5} py=\"3\">\n        <P>\n          Stroke severity is measured with the <B>NIH Stroke Scale (NIHSS)</B>{' '}\n          at admission.\n        </P>\n      </View>\n      <Image\n        source={require('../assets/images/nih_stroke_scale.jpg')}\n        resizeMode=\"contain\"\n        alt=\"NIH Stroke Scale\"\n        style={{\n          width: '100%',\n          height: undefined,\n          aspectRatio: 604 / 794,\n        }}\n      />\n    </ScrollView>\n  </>\n)\n\nexport default P2\n","import { ITextProps, Text } from 'native-base'\n\nconst B = ({ children }: ITextProps) => (\n  <Text fontWeight=\"bold\">{children}</Text>\n)\n\nexport default B\n","import React from 'react'\nimport {\n  Image,\n  Heading,\n  HStack,\n  Icon,\n  IconButton,\n  ScrollView,\n  View,\n} from 'native-base'\n\nimport P from '../components/P'\n\nimport { RootStackScreenProps } from '../navigation/types'\nimport B from '../components/B'\n\nconst P3 = ({ navigation }: RootStackScreenProps<'P1'>) => (\n  <>\n    <HStack bg=\"primary.500\" safeAreaTop pr=\"50px\" alignItems=\"center\">\n      <IconButton\n        icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n        onPress={() => navigation.navigate('Calculate')}\n      />\n      <Heading flex={1} textAlign=\"center\" color=\"white\">\n        Stroke location\n      </Heading>\n    </HStack>\n    <ScrollView>\n      <View px={5} py=\"3\">\n        <P>\n          It is evaluated, whether stroke affected the <B>frontal operculum</B>\n          (regardless of laterality). The best available brain scan should be\n          used (MRI typically preferred to CT).\n        </P>\n        <P>\n          <B>Figure:</B> Location of the frontal operculum on axial, coronal and\n          sagittal slices.\n        </P>\n      </View>\n      <Image\n        source={require('../assets/images/p3.png')}\n        resizeMode=\"contain\"\n        alt=\"NIH Stroke Scale\"\n        style={{\n          width: '100%',\n          height: undefined,\n          aspectRatio: 2164 / 880,\n        }}\n      />\n    </ScrollView>\n  </>\n)\n\nexport default P3\n","import { HStack, ITextProps, Text } from 'native-base'\n\nconst Li = ({ children }: ITextProps) => (\n  <HStack pl=\"5\">\n    <Text>\n      <Text fontSize=\"10px\">●</Text>\n    </Text>\n    <Text pl={1}>{children}</Text>\n  </HStack>\n)\n\nexport default Li\n","import React from 'react'\nimport {\n  Heading,\n  HStack,\n  Icon,\n  IconButton,\n  ScrollView,\n  View,\n} from 'native-base'\n\nimport P from '../components/P'\nimport B from '../components/B'\nimport Li from '../components/Li'\n\nimport { RootStackScreenProps } from '../navigation/types'\n\nconst P4 = ({ navigation }: RootStackScreenProps<'P1'>) => (\n  <>\n    <HStack bg=\"primary.500\" safeAreaTop pr=\"50px\" alignItems=\"center\">\n      <IconButton\n        icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n        onPress={() => navigation.navigate('Calculate')}\n      />\n      <Heading flex={1} textAlign=\"center\" color=\"white\">\n        Risk of Aspiration\n      </Heading>\n    </HStack>\n    <ScrollView>\n      <View px={5} py=\"3\">\n        <P>\n          Risk of aspiration is evaluated at the initial swallowing evaluation\n          using the\n          <B>Any 2 Scale</B> (Daniels et al. 1997). One point is given for each\n          of the six items.\n        </P>\n        <P>\n          <B>Any 2 Scale</B>\n        </P>\n        <Li>\n          <B>Dysphonia</B> A voice disturbance in the parameters of vocal\n          quality, pitch or intensity.\n        </Li>\n        <Li>\n          <B>Dysarthria</B> A speech disorder resulting from disturbances in\n          muscular control affecting the areas of respiration, articulation,\n          phonation, resonance, or prosody.\n        </Li>\n        <Li>\n          <B>Abnormal gag reflex</B> Either absent or weakend velar or\n          pharyngeal wall contraction, unilaterally or bilaterally, in response\n          to tactile stimulation of the posterior pharyngeal wall.\n        </Li>\n        <Li>\n          <B>Abnormal volitional cough</B> A weak response, verbalized response,\n          or no response on given the command to cough.\n        </Li>\n        <Li>\n          <B>Cough after swallow</B> Cough immediate or within 1 minute of\n          ingestion of calibrated volumes of water (5, 10, and 20ml presented in\n          duplicate).\n        </Li>\n        <Li>\n          <B>Voice change after swallow</B> Alteration in vocal quality\n          following ingestion of calibrated volumes of water.\n        </Li>\n        <P>\n          If a subjects cannot be evaluated due to severe impairment (i.e.\n          reduced alertness, severe aphasia), a score of 6 points is given.\n        </P>\n        <Heading size=\"md\" py={2}>\n          Reference\n        </Heading>\n        <P>\n          Reference: Daniels S, McAdam C, Brailey K, Foundas A. Clinical\n          assessment of swallowing and prediction of dysphagia severity. Am J\n          Speech Lang Pathol. 1997;6:17–24.\n        </P>\n      </View>\n    </ScrollView>\n  </>\n)\n\nexport default P4\n","import React from 'react'\nimport {\n  Heading,\n  HStack,\n  Icon,\n  IconButton,\n  ScrollView,\n  View,\n} from 'native-base'\n\nimport P from '../components/P'\nimport B from '../components/B'\nimport Li from '../components/Li'\n\nimport { RootStackScreenProps } from '../navigation/types'\n\nconst P5 = ({ navigation }: RootStackScreenProps<'P1'>) => (\n  <>\n    <HStack bg=\"primary.500\" safeAreaTop pr=\"50px\" alignItems=\"center\">\n      <IconButton\n        icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n        onPress={() => navigation.navigate('Calculate')}\n      />\n      <Heading flex={1} textAlign=\"center\" color=\"white\">\n        Impairment of oral intake\n      </Heading>\n    </HStack>\n    <ScrollView>\n      <View px={5} py=\"3\">\n        <P>\n          Initial impairment of oral intake is measured with the\n          <B>Functional Oral Intake Scale (FOIS)</B>. The evaluation is based on\n          the level of oral intake or food and liquid consistency recommended by\n          the initial objective swallow assessment.\n        </P>\n        <P>\n          <B>Functional Oral Intake Scale (FOIS)</B>\n        </P>\n\n        <Li>\n          <B>Level 1</B> Nothing by mouth.\n        </Li>\n        <Li>\n          <B>Level 2</B> Tube dependent with minimal attempts of food or liquid.\n        </Li>\n        <Li>\n          <B>Level 3</B> Tube dependent with consistent oral intake of food or\n          liquid.\n        </Li>\n        <Li>\n          <B>Level 4</B> Total oral diet of a single consistency.\n        </Li>\n        <Li>\n          <B>Level 5</B> Total oral diet with multiple consistencies, but\n          requiring special preparation or compensations.\n        </Li>\n        <Li>\n          <B>Level 6</B> Total oral diet with multiple consistencies without\n          special preparation, but with specific food limitations.\n        </Li>\n        <Li>\n          <B>Level 7</B> Total oral diet with no restrictions.\n        </Li>\n        <Heading size=\"md\" py={2}>\n          Reference\n        </Heading>\n        <P>\n          Reference: Initial psychometric assessment of a functional oral intake\n          scale for dysphagia in stroke patients. Crary MA, Mann GD, Groher ME.\n          Arch Phys Med Rehabil. 2005 Aug;86(8):1516-20.\n        </P>\n      </View>\n    </ScrollView>\n  </>\n)\n\nexport default P5\n","import { Box, Heading, HStack, Icon, IconButton, ScrollView } from 'native-base'\n\nimport Hr from '../components/Hr'\nimport Li from '../components/Li'\nimport P from '../components/P'\n\nimport { BottomTabScreenProps } from '../navigation/types'\n\nconst About = ({ navigation }: BottomTabScreenProps<'About'>) => (\n  <>\n    <HStack bg=\"primary.500\" safeAreaTop pr=\"50px\" alignItems=\"center\">\n      <IconButton\n        icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n        onPress={() => navigation.navigate('Calculate')}\n      />\n      <Heading flex={1} textAlign=\"center\" color=\"white\">\n        About\n      </Heading>\n    </HStack>\n    <ScrollView px=\"5\">\n      <Box safeAreaBottom>\n        <Heading size=\"md\" py=\"2\">\n          Eligibility\n        </Heading>\n        <P>PRESS should only be used in adults</P>\n        <Li>who had an ischaemic stroke AND</Li>\n        <Li>\n          who have impaired oral intake defined as FOIS ≤ 4 (i.e. oral diet of a\n          single consistency or worse)\n        </Li>\n        <P>PRESS should NOT be used in people with </P>\n        <Li>pre-existent dysphagia OR</Li>\n        <Li>recurrent stroke within the prediction time-frame OR</Li>\n        <Li>late hospital admission &gt; 4 days after stroke onset. </Li>\n        <Hr />\n        <Heading size=\"md\" py=\"2\">\n          Limitations\n        </Heading>\n        <Li>\n          PRESS can aid prognostication of dysphagia recovery but its clinical\n          usefulness to influence medical decisions has not been tested.\n        </Li>\n        <Hr />\n        <Heading size=\"md\" py=\"2\">\n          Prediction\n        </Heading>\n        <Li>\n          PRESS provides time-dependent predictions for recovery of impaired\n          oral intake according to the total PRESS value. 95% confidence\n          intervals (CI) are also displayed.\n        </Li>\n        <Li>\n          Guidelines recommend enteral tube feeding if impaired oral intake\n          persists for ≥ 7 days after stroke. Percutaneous endoscopic\n          gastrostomy (PEG) should be preferred if impaired oral intake persists\n          for ≥ 30 days after stroke.\n        </Li>\n        <Hr />\n        <Heading size=\"md\" py=\"2\">\n          Performance\n        </Heading>\n        <Li>\n          PRESS was developed in 153 stroke survivors in Switzerland and\n          prospectively validated in 126 separate subjects.\n        </Li>\n        <Li>\n          Discrimination in validation cohort: c statistic of 0.84 for\n          predicting recovery of oral intake on day 7 and 0.77 on day 30; c\n          statistic of 0.94 for predicting return to prestroke diet on day 7 and\n          0.71 on day 30.\n        </Li>\n        <Li>\n          Calibration in validation cohort: high agreement between predicted and\n          observed outcomes.\n        </Li>\n        <Hr />\n        <Heading size=\"md\" py=\"2\">\n          Reference manuscript:\n        </Heading>\n        <Li>To be included after acceptance of manuscript.</Li>\n      </Box>\n    </ScrollView>\n  </>\n)\n\nexport default About\n","import React from 'react'\nimport * as Application from 'expo-application'\nimport {\n  Heading,\n  HStack,\n  Icon,\n  IconButton,\n  ScrollView,\n  VStack,\n  Text,\n} from 'native-base'\n\nimport { BottomTabScreenProps } from '../navigation/types'\nimport P from '../components/P'\nimport Constants from 'expo-constants'\n\nconst Terms = ({ navigation }: BottomTabScreenProps<'Terms'>) => (\n  <>\n    <HStack bg=\"primary.500\" safeAreaTop alignItems=\"center\" pr=\"50px\">\n      <IconButton\n        icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n        onPress={() => navigation.navigate('Calculate')}\n      />\n      <Heading flex={1} textAlign=\"center\" color=\"white\" isTruncated>\n        Terms &amp; Conditions\n      </Heading>\n    </HStack>\n    <ScrollView p=\"5\">\n      <VStack safeAreaBottom>\n        <Heading size=\"md\"></Heading>\n        <P>\n          PRESS (Predictive Swallowing Score) is a prediction tool applicable to\n          people who suffered an ischaemic stroke leading to impaired oral\n          intake. Given some clinical characteristics, it provides estimates of\n          the probability to recover oral intake or return to prestroke diet 7\n          or 30 days after stroke.\n        </P>\n        <P>\n          This tool is meant to be used only by medical professionals to improve\n          prognostication of dysphagia recovery after stroke. Its clinical\n          usefulness to influence medical decisions has not been tested.\n        </P>\n        <P>\n          By accepting these terms, the user agrees on the nature and purpose of\n          this prediction tool.\n        </P>\n      </VStack>\n      <Text textAlign=\"center\" color=\"gray.400\">\n        {Constants.expoConfig?.version}\n      </Text>\n      <Text textAlign=\"center\" color=\"gray.400\">\n        {Application.nativeBuildVersion}\n      </Text>\n      <Text textAlign=\"center\" color=\"gray.400\">\n        {Application.nativeApplicationVersion}\n      </Text>\n    </ScrollView>\n  </>\n)\n\nexport default Terms\n","import React from 'react'\nimport { Icon } from 'native-base'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\n\nimport About from '../screens/About'\nimport Terms from '../screens/Terms'\nimport { BottomTabParamList } from './types'\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>()\n\nconst BottomTabNavigator = () => {\n  return (\n    <BottomTab.Navigator\n      screenOptions={{\n        tabBarLabelPosition: 'below-icon',\n        headerShown: false,\n        tabBarLabelStyle: { fontWeight: '500' },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"About\"\n        component={About}\n        options={{\n          tabBarIcon: ({ color }) => (\n            <Icon name=\"information-outline\" color={color} size=\"xl\" />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Terms\"\n        component={Terms}\n        options={{\n          tabBarIcon: ({ color }) => (\n            <Icon name=\"file-document-outline\" color={color} size=\"xl\" />\n          ),\n        }}\n      />\n    </BottomTab.Navigator>\n  )\n}\n\nexport default BottomTabNavigator\n","const model = {\n  impairied: {\n    week: {\n      value: [5, 9, 16, 26, 39, 55, 69, 81, 88, 93, 96],\n      min: [2, 3, 7, 15, 28, 43, 58, 69, 77, 84, 89],\n      max: [16, 23, 31, 40, 52, 65, 78, 89, 94, 97, 99],\n    },\n    month: {\n      value: [2, 3, 5, 8, 11, 16, 23, 31, 41, 52, 62],\n      min: [0, 1, 2, 3, 5, 9, 15, 22, 30, 37, 43],\n      max: [10, 12, 15, 18, 22, 27, 33, 42, 54, 67, 79],\n    },\n  },\n  noReturn: {\n    week: {\n      value: [14, 37, 67, 88, 96, 99, 100, 100, 100, 100, 100],\n      min: [2, 10, 41, 73, 86, 91, 94, 96, 98, 99, 99],\n      max: [64, 75, 86, 95, 99, 100, 100, 100, 100, 100, 100],\n    },\n    month: {\n      value: [23, 30, 37, 45, 54, 62, 69, 76, 82, 86, 90],\n      min: [9, 15, 22, 31, 41, 51, 59, 65, 69, 73, 76],\n      max: [47, 51, 56, 60, 65, 71, 78, 84, 90, 93, 96],\n    },\n  },\n}\n\nexport default (score: number) => {\n  const { impairied, noReturn } = model\n  return {\n    impairiedWeek: {\n      min: impairied.week.min[score],\n      max: impairied.week.max[score],\n      value: impairied.week.value[score],\n    },\n    impairiedMonth: {\n      min: impairied.month.min[score],\n      max: impairied.month.max[score],\n      value: impairied.month.value[score],\n    },\n    noReturnWeek: {\n      min: noReturn.week.min[score],\n      max: noReturn.week.max[score],\n      value: noReturn.week.value[score],\n    },\n    noReturnMonth: {\n      min: noReturn.month.min[score],\n      max: noReturn.month.max[score],\n      value: noReturn.month.value[score],\n    },\n  }\n}\n","import { Text, HStack, VStack } from 'native-base'\nimport { AnimatedCircularProgress } from 'react-native-circular-progress'\n\ninterface GaugeProps {\n  min: number\n  max: number\n  value: number\n}\n\nconst GaugeProps: React.FC<GaugeProps> = ({ min, max, value }) => (\n  <AnimatedCircularProgress\n    size={150}\n    width={10}\n    fill={value}\n    rotation={0}\n    tintColor=\"#a3c109\"\n    lineCap=\"round\"\n    backgroundColor=\"#C7E596\"\n  >\n    {(fill) => (\n      <VStack alignItems=\"center\">\n        <HStack alignItems=\"baseline\">\n          <Text fontWeight=\"bold\" fontSize={44}>\n            {fill.toFixed()}\n          </Text>\n          <Text>%</Text>\n        </HStack>\n        <Text color=\"gray.600\">\n          {min}% - {max}%\n        </Text>\n      </VStack>\n    )}\n  </AnimatedCircularProgress>\n)\n\nexport default GaugeProps\n","import React from 'react'\nimport {\n  Heading,\n  IconButton,\n  Icon,\n  HStack,\n  ScrollView,\n  VStack,\n  Box,\n} from 'native-base'\n\nimport { RootStackScreenProps } from '../navigation/types'\nimport estimate from '../services/estimate'\nimport GaugeProps from '../components/Gauge'\n\nconst Prediction = ({\n  navigation,\n  route,\n}: RootStackScreenProps<'Prediction'>) => {\n  const { score } = route.params\n  const { impairiedMonth, impairiedWeek, noReturnMonth, noReturnWeek } =\n    estimate(score)\n  return (\n    <>\n      <HStack safeAreaTop bg=\"primary.500\">\n        <IconButton\n          icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n          onPress={() => navigation.navigate('Calculate')}\n        />\n        <Heading alignSelf=\"center\" flex={1} textAlign=\"center\" color=\"white\">\n          PRESS {score} points\n        </Heading>\n        <IconButton\n          icon={<Icon name=\"help-circle\" color=\"white\" size=\"xl\" />}\n          onPress={() => navigation.navigate('Info')}\n        />\n      </HStack>\n      <Box safeAreaBottom>\n        <ScrollView px=\"3\">\n          <Heading size=\"lg\" pt=\"7\">\n            Probability of impaired oral intake\n          </Heading>\n          <HStack justifyContent=\"space-around\">\n            <VStack alignItems=\"center\">\n              <Heading size=\"md\" py=\"5\">\n                Day 7\n              </Heading>\n              <GaugeProps {...impairiedWeek} />\n            </VStack>\n            <VStack alignItems=\"center\">\n              <Heading size=\"md\" py=\"5\">\n                Day 30\n              </Heading>\n              <GaugeProps {...impairiedMonth} />\n            </VStack>\n          </HStack>\n          <Heading size=\"md\" pt=\"7\">\n            No return to prestroke diet\n          </Heading>\n          <HStack justifyContent=\"space-around\">\n            <VStack alignItems=\"center\">\n              <Heading size=\"md\" py=\"5\">\n                Day 7\n              </Heading>\n              <GaugeProps {...noReturnWeek} />\n            </VStack>\n            <VStack alignItems=\"center\">\n              <Heading size=\"md\" py=\"5\">\n                Day 30\n              </Heading>\n              <GaugeProps {...noReturnMonth} />\n            </VStack>\n          </HStack>\n        </ScrollView>\n      </Box>\n    </>\n  )\n}\n\nexport default Prediction\n","import React from 'react'\nimport { Box, Heading, HStack, Icon, IconButton, ScrollView } from 'native-base'\n\nimport { RootStackScreenProps } from '../navigation/types'\nimport P from '../components/P'\nimport B from '../components/B'\n\nconst Info = ({ navigation }: RootStackScreenProps<'Info'>) => (\n  <>\n    <HStack bg=\"primary.500\" safeAreaTop pr=\"50px\" alignItems=\"center\">\n      <IconButton\n        icon={<Icon name=\"arrow-left\" color=\"white\" size=\"xl\" />}\n        onPress={() => {\n          if (navigation.canGoBack()) {\n            navigation.goBack()\n          } else {\n            navigation.navigate('Calculate')\n          }\n        }}\n      />\n      <Heading flex={1} textAlign=\"center\" color=\"white\">\n        Predicted values\n      </Heading>\n    </HStack>\n\n    <ScrollView px={5} py=\"3\">\n      <Box safeAreaBottom>\n        <P>\n          PRESS predicts the probability of impaired oral intake and return to\n          prestroke diet. Prediction estimates are generated for day 7 and day\n          30 after stroke. Impaired oral intake is defined as FOIS ≤ 4 (i.e.\n          oral diet of a single consistency or worse). The 95% confidence\n          interval for the prediction estimates is given below.\n        </P>\n        <Heading size=\"md\" py={2}>\n          Enteral tube feeding\n        </Heading>\n        <P>\n          Guidelines recommend enteral tube feeding if oral intake is not likely\n          to recover within\n          <B>7 days</B>.\n        </P>\n        <P>\n          PEG should be preferred if swallowing disturbances are likely to\n          persist for more than\n          <B>4 weeks</B>.\n        </P>\n        <P>\n          Clinicians should decide within the first 48 hours whether enteral\n          tube feeding should be established.\n        </P>\n        <Heading size=\"md\" py={2}>\n          Reference\n        </Heading>\n        <P>\n          Gomes F, Hookway C, Weekes CE, Royal College of Physicians\n          Intercollegiate Stroke Working Party (2014): Royal College of\n          Physicians Intercollegiate Stroke Working Party evidence-based\n          guidelines for the nutritional support of patients who have had a\n          stroke. Journal of human nutrition and dietetics : the official\n          journal of the British Dietetic Association.\n        </P>\n        <P>\n          Wirth R, Smoliner C, Jäger M, Warnecke T, Leischker AH, Dziewas R,\n          DGEM Steering Committee* (2013): Guideline clinical nutrition in\n          patients with stroke. Exp Transl Stroke Med 5:14.\n        </P>\n        <P>\n          Corrigan ML, Escuro AA, Celestin J, Kirby DF (2011): Nutrition in the\n          stroke patient. Nutr Clin Pract 26:242–252.\n        </P>\n        <P>\n          Stroud M, Duncan H, Nightingale J, British Society of Gastroenterology\n          (2003): Guidelines for enteral feeding in adult hospital patients.\n          Gut. BMJ Group.\n        </P>\n      </Box>\n    </ScrollView>\n  </>\n)\n\nexport default Info\n","import React from 'react'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\n\nimport Calculate from '../screens/Calculate'\nimport NotFound from '../screens/NotFound'\nimport { RootStackParamList } from './types'\nimport P1 from '../screens/P1'\nimport P2 from '../screens/P2'\nimport P3 from '../screens/P3'\nimport P4 from '../screens/P4'\nimport P5 from '../screens/P5'\nimport BottomTabNavigator from './BottomTabNavigator'\nimport Prediction from '../screens/Prediction'\nimport Info from '../screens/Info'\n\nconst Stack = createNativeStackNavigator<RootStackParamList>()\n\nconst RootNavigator = () => (\n  <Stack.Navigator>\n    <Stack.Group screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Calculate\" component={Calculate} />\n      <Stack.Screen name=\"P1\" component={P1} options={{ title: 'Age' }} />\n      <Stack.Screen\n        name=\"P2\"\n        component={P2}\n        options={{ title: 'Stroke severity' }}\n      />\n      <Stack.Screen\n        name=\"P3\"\n        component={P3}\n        options={{ title: 'Stroke location' }}\n      />\n      <Stack.Screen\n        name=\"P4\"\n        component={P4}\n        options={{ title: 'Risk of Aspiration' }}\n      />\n      <Stack.Screen\n        name=\"P5\"\n        component={P5}\n        options={{ title: 'Impairment of oral intake' }}\n      />\n      <Stack.Screen name=\"Prediction\" component={Prediction} />\n      <Stack.Screen name=\"Info\" component={Info} />\n      <Stack.Screen name=\"BottomTab\" component={BottomTabNavigator} />\n      <Stack.Screen name=\"NotFound\" component={NotFound} />\n    </Stack.Group>\n  </Stack.Navigator>\n)\n\nexport default RootNavigator\n","import React from 'react'\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native'\n\nimport LinkingConfiguration from './LinkingConfiguration'\nimport RootNavigator from './RootNavigator'\nimport { theme } from '../NativeBase'\nimport { Platform } from 'react-native'\n\nconst myTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: theme.colors.primary[500],\n  },\n}\n\nconst Navigation = () => (\n  <NavigationContainer\n    linking={Platform.OS === 'web' ? undefined : LinkingConfiguration}\n    theme={myTheme}\n  >\n    <RootNavigator />\n  </NavigationContainer>\n)\n\nexport default Navigation\n","import React, { useEffect, useState } from 'react'\nimport { syncStorage } from 'use-state-persist'\n\nconst Storage: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [loading, setLoading] = useState(true)\n  useEffect(() => {\n    syncStorage.init().then(() => {\n      setLoading(false)\n    })\n  }, [])\n  return <>{loading ? null : children}</>\n}\n\nexport default Storage\n","import { View } from 'native-base'\nimport React from 'react'\nimport { ImageBackground, Platform } from 'react-native'\n\nconst Phone = ({ children }: { children: React.ReactNode }) => {\n  if (Platform.OS !== 'web') {\n    return <>{children}</>\n  }\n\n  return (\n    <View bg=\"trueGray.300\" flex={1}>\n      <ImageBackground\n        source={require('../assets/images/table.jpg')}\n        style={{ flex: 1 }}\n      >\n        <View\n          flex={1}\n          borderColor=\"red.300\"\n          overflow=\"clip\"\n          shadow={9}\n          w=\"100%\"\n          mt={[0, 0, '50px']}\n          maxW={[null, null, 448]}\n          maxH={[null, null, 760]}\n          borderWidth={[null, null, 1]}\n          borderRadius={[0, 0, 30]}\n          alignSelf=\"center\"\n        >\n          <View\n            flex={1}\n            borderColor=\"gray.700\"\n            w=\"100%\"\n            overflow=\"clip\"\n            borderWidth={[null, null, 10]}\n            borderRadius={[0, 0, 30]}\n            bg=\"white\"\n          >\n            {children}\n          </View>\n        </View>\n      </ImageBackground>\n    </View>\n  )\n}\nexport default Phone\n","import React from 'react'\nimport { StatusBar } from 'expo-status-bar'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\n\nimport NativeBase from './NativeBase'\nimport Navigation from './navigation'\nimport Storage from './Storage'\nimport Phone from './components/Phone'\n\nconst App = () => (\n  <Storage>\n    <NativeBase>\n      <SafeAreaProvider>\n        <Phone>\n          <Navigation />\n          <StatusBar style=\"light\" />\n        </Phone>\n      </SafeAreaProvider>\n    </NativeBase>\n  </Storage>\n)\n\nexport default App\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/press/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [287], () => (__webpack_require__(9386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["theme","extendTheme","colors","primary","components","Icon","defaultProps","as","MaterialCommunityIcons","_ref","children","_jsx","NativeBaseProvider","prefixes","Linking","createURL","config","screens","Calculate","path","P1","P2","P3","P4","P5","Prediction","Info","BottomTab","About","Terms","NotFound","letter","title","_ref$subTitle","subTitle","onPress","_jsxs","HStack","py","VStack","flex","Heading","size","fontWeight","Text","color","IconButton","icon","name","options","selected","Button","isAttached","map","_ref2","label","value","flexGrow","variant","View","borderBottomColor","borderBottomWidth","h","navigation","_useStatePersist","useStatePersist","_useStatePersist2","_slicedToArray","p1","setP1","_useStatePersist3","_useStatePersist4","p2","setP2","_useStatePersist5","_useStatePersist6","p3","setP3","_useStatePersist7","_useStatePersist8","p4","setP4","_useStatePersist9","_useStatePersist10","p5","setP5","_useStatePersist11","_useStatePersist12","termsVisible","setTermsVisible","_Fragment","Modal","isOpen","onClose","P","leftIcon","bg","safeAreaTop","pl","alignItems","textAlign","navigate","screen","ScrollView","px","pb","Box","safeAreaBottom","Label","Segment","Hr","mt","score","pr","B","Image","source","require","resizeMode","alt","style","width","height","undefined","aspectRatio","fontSize","Li","_Constants$expoConfig","isTruncated","p","Constants","version","Application","nativeBuildVersion","nativeApplicationVersion","createBottomTabNavigator","Navigator","screenOptions","tabBarLabelPosition","headerShown","tabBarLabelStyle","Screen","component","tabBarIcon","model","week","min","max","month","AnimatedCircularProgress","fill","rotation","tintColor","lineCap","backgroundColor","toFixed","route","params","_estimate","impairied","noReturn","impairiedWeek","impairiedMonth","noReturnWeek","noReturnMonth","estimate","alignSelf","pt","justifyContent","GaugeProps","_objectSpread","canGoBack","goBack","Stack","createNativeStackNavigator","Group","BottomTabNavigator","myTheme","DefaultTheme","NavigationContainer","linking","Platform","LinkingConfiguration","RootNavigator","_useState","useState","_useState2","loading","setLoading","useEffect","syncStorage","then","ImageBackground","borderColor","overflow","shadow","w","maxW","maxH","borderWidth","borderRadius","Storage","NativeBase","SafeAreaProvider","Phone","Navigation","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}